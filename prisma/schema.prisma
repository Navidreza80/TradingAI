// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  clerkId   String   @unique
  name      String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      String?

  // Relations
  blogs    Blog[] // One-to-many relation with Blog
  comments Comment[] // One-to-many relation with Comment
  // userInteraction BlogInteraction[]
}

// model BlogInteraction {
//   id String @id @default(cuid())
//   blogId String 
//   blog Blog @relation(fields: [blogId], references: [id])
//   userId String
//   user User @relation(fields: [userId], references: [id])
//   isLiked Boolean
//   isDisliked Boolean
//   isSaved Boolean
// }

model Blog {
  id               String    @id @default(cuid())
  title            String
  shortDescription String
  content          String?
  likes            Int       @default(0)
  dislikes         Int       @default(0)
  isLiked          Boolean   @default(false)
  isDisliked       Boolean   @default(false)
  isSaved          Boolean   @default(false)
  comments         Comment[]
  blogThumbnail    String?
  publisherId      String
  publisher        User      @relation(fields: [publisherId], references: [id])
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  // blogInteraction BlogInteraction[]
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  blogId    String
  blog      Blog     @relation(fields: [blogId], references: [id])
  createdAt DateTime @default(now())
  likes     Int      @default(0)
  dislikes  Int      @default(0)
}
